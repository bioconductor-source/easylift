[{"path":[]},{"path":"https://nahid18.github.io/easylift/articles/easylift.html","id":"installation","dir":"Articles","previous_headings":"Getting Started","what":"Installation","title":"Perform Genomic Liftover","text":"","code":"if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"easylift\")"},{"path":"https://nahid18.github.io/easylift/articles/easylift.html","id":"documentation","dir":"Articles","previous_headings":"Getting Started","what":"Documentation","title":"Perform Genomic Liftover","text":"view documentation:","code":"browseVignettes(\"easylift\")"},{"path":"https://nahid18.github.io/easylift/articles/easylift.html","id":"import","dir":"Articles","previous_headings":"Getting Started","what":"Import","title":"Perform Genomic Liftover","text":"","code":"library(\"easylift\") #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: BiocGenerics #>  #> Attaching package: 'BiocGenerics' #> The following objects are masked from 'package:stats': #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from 'package:base': #>  #>     anyDuplicated, aperm, append, as.data.frame, basename, cbind, #>     colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, #>     get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, #>     match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, #>     Position, rank, rbind, Reduce, rownames, sapply, setdiff, table, #>     tapply, union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #>  #> Attaching package: 'S4Vectors' #> The following object is masked from 'package:utils': #>  #>     findMatches #> The following objects are masked from 'package:base': #>  #>     expand.grid, I, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Loading required package: BiocFileCache #> Loading required package: dbplyr"},{"path":"https://nahid18.github.io/easylift/articles/easylift.html","id":"arguments","dir":"Articles","previous_headings":"Getting Started","what":"Arguments","title":"Perform Genomic Liftover","text":"Create GRanges object, assign genome , specify chain file","code":"gr <- GRanges(   seqname = Rle(     c(\"chr1\", \"chr2\"),      c(100000, 100000)   ),   ranges = IRanges(     start = 1, end = 200000   ) ) # Here, \"hg19\" is the source genome genome(gr) <- \"hg19\"  # Here, we use the `system.file()` function because the chain file is in the # package (however if you need to point to any other file on your machine, # just do 'chain <- \"path/to/your/hg19ToHg38.over.chain.gz\"'): chain <- system.file(\"extdata\", \"hg19ToHg38.over.chain.gz\", package = \"easylift\")  gr #> GRanges object with 200000 ranges and 0 metadata columns: #>            seqnames    ranges strand #>               <Rle> <IRanges>  <Rle> #>        [1]     chr1  1-200000      * #>        [2]     chr1  1-200000      * #>        [3]     chr1  1-200000      * #>        [4]     chr1  1-200000      * #>        [5]     chr1  1-200000      * #>        ...      ...       ...    ... #>   [199996]     chr2  1-200000      * #>   [199997]     chr2  1-200000      * #>   [199998]     chr2  1-200000      * #>   [199999]     chr2  1-200000      * #>   [200000]     chr2  1-200000      * #>   ------- #>   seqinfo: 2 sequences from hg19 genome; no seqlengths"},{"path":"https://nahid18.github.io/easylift/articles/easylift.html","id":"run","dir":"Articles","previous_headings":"Getting Started","what":"Run","title":"Perform Genomic Liftover","text":"Call easylift GRanges object, target genome chain file.","code":"# Here, \"hg38\" is the target genome easylift(gr, \"hg38\", chain) #> GRanges object with 300000 ranges and 0 metadata columns: #>            seqnames        ranges strand #>               <Rle>     <IRanges>  <Rle> #>        [1]     chr1  10001-177376      * #>        [2]    chr19 242824-242864      * #>        [3]     chr1  10001-177376      * #>        [4]    chr19 242824-242864      * #>        [5]     chr1  10001-177376      * #>        ...      ...           ...    ... #>   [299996]     chr2  10001-200000      * #>   [299997]     chr2  10001-200000      * #>   [299998]     chr2  10001-200000      * #>   [299999]     chr2  10001-200000      * #>   [300000]     chr2  10001-200000      * #>   ------- #>   seqinfo: 25 sequences (1 circular) from hg38 genome"},{"path":"https://nahid18.github.io/easylift/articles/easylift.html","id":"run-with-biocfilecache","dir":"Articles","previous_headings":"Getting Started","what":"Run with BiocFileCache","title":"Perform Genomic Liftover","text":"use BiocFileCache chain file, add cache: , use easylift:","code":"chain_file <- \"/path/to/your/hg19ToHg38.over.chain.gz\" bfc <- BiocFileCache()  # Add chain file to cache if already not available if (nrow(bfcquery(bfc, basename(chain_file))) == 0)     bfcadd(bfc, chain_file) easylift(gr, \"hg38\")  # or gr |> easylift(\"hg38\")"},{"path":"https://nahid18.github.io/easylift/articles/easylift.html","id":"citation","dir":"Articles","previous_headings":"","what":"Citation","title":"Perform Genomic Liftover","text":"cite package easylift publications use: Al Nahid , Pagès H, Love M (2023). easylift: R package perform genomic liftover. R package version 1.0.0, https://github.com/nahid18/easylift. BibTeX entry LaTeX users Please note easylift made possible thanks many R bioinformatics software authors, cited either vignettes /paper(s) describing package.","code":"@Manual{,     title = {easylift: An R package to perform genomic liftover},     author = {Abdullah Al Nahid, Hervé Pagès, Michael Love},     year = {2023},     note = {R package version 1.0.0},     url = {https://github.com/nahid18/easylift},   }"},{"path":"https://nahid18.github.io/easylift/articles/easylift.html","id":"code-of-conduct","dir":"Articles","previous_headings":"","what":"Code of Conduct","title":"Perform Genomic Liftover","text":"Please note easylift project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://nahid18.github.io/easylift/articles/easylift.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Perform Genomic Liftover","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #> [1] easylift_1.3.0       BiocFileCache_2.12.0 dbplyr_2.5.0         #> [4] GenomicRanges_1.56.1 GenomeInfoDb_1.40.1  IRanges_2.38.1       #> [7] S4Vectors_0.42.1     BiocGenerics_0.50.0  BiocStyle_2.32.1     #>  #> loaded via a namespace (and not attached): #>  [1] SummarizedExperiment_1.34.0 rjson_0.2.21                #>  [3] xfun_0.47                   bslib_0.8.0                 #>  [5] lattice_0.22-6              Biobase_2.64.0              #>  [7] vctrs_0.6.5                 tools_4.4.1                 #>  [9] bitops_1.0-8                generics_0.1.3              #> [11] parallel_4.4.1              curl_5.2.1                  #> [13] tibble_3.2.1                fansi_1.0.6                 #> [15] RSQLite_2.3.7               blob_1.2.4                  #> [17] pkgconfig_2.0.3             R.oo_1.26.0                 #> [19] Matrix_1.7-0                desc_1.4.3                  #> [21] lifecycle_1.0.4             GenomeInfoDbData_1.2.12     #> [23] compiler_4.4.1              Rsamtools_2.20.0            #> [25] Biostrings_2.72.1           textshaping_0.4.0           #> [27] codetools_0.2-20            htmltools_0.5.8.1           #> [29] sass_0.4.9                  RCurl_1.98-1.16             #> [31] yaml_2.3.10                 crayon_1.5.3                #> [33] pillar_1.9.0                pkgdown_2.1.0               #> [35] jquerylib_0.1.4             R.utils_2.12.3              #> [37] BiocParallel_1.38.0         DelayedArray_0.30.1         #> [39] cachem_1.1.0                abind_1.4-5                 #> [41] tidyselect_1.2.1            digest_0.6.36               #> [43] dplyr_1.1.4                 restfulr_0.0.15             #> [45] bookdown_0.40               grid_4.4.1                  #> [47] fastmap_1.2.0               SparseArray_1.4.8           #> [49] cli_3.6.3                   magrittr_2.0.3              #> [51] S4Arrays_1.4.1              XML_3.99-0.17               #> [53] utf8_1.2.4                  filelock_1.0.3              #> [55] UCSC.utils_1.0.0            bit64_4.0.5                 #> [57] rmarkdown_2.28              XVector_0.44.0              #> [59] httr_1.4.7                  matrixStats_1.3.0           #> [61] bit_4.0.5                   ragg_1.3.2                  #> [63] R.methodsS3_1.8.2           memoise_2.0.1               #> [65] evaluate_0.24.0             knitr_1.48                  #> [67] BiocIO_1.14.0               rtracklayer_1.64.0          #> [69] rlang_1.1.4                 glue_1.7.0                  #> [71] DBI_1.2.3                   BiocManager_1.30.23         #> [73] jsonlite_1.8.8              R6_2.5.1                    #> [75] MatrixGenerics_1.16.0       GenomicAlignments_1.40.0    #> [77] systemfonts_1.1.0           fs_1.6.4                    #> [79] zlibbioc_1.50.0"},{"path":"https://nahid18.github.io/easylift/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Abdullah Al Nahid. Author, maintainer. Hervé Pagès. Author, reviewer. Michael Love. Author, reviewer.","code":""},{"path":"https://nahid18.github.io/easylift/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Al Nahid , Pagès H, Love M (2024). easylift: R package perform genomic liftover. R package version 1.3.0, https://nahid18.github.io/easylift, https://github.com/nahid18/easylift.","code":"@Manual{,   title = {easylift: An R package to perform genomic liftover},   author = {Abdullah {Al Nahid} and Hervé Pagès and Michael Love},   year = {2024},   note = {R package version 1.3.0, https://nahid18.github.io/easylift},   url = {https://github.com/nahid18/easylift}, }"},{"path":"https://nahid18.github.io/easylift/index.html","id":"easylift","dir":"","previous_headings":"","what":"An R package to perform genomic liftover","title":"An R package to perform genomic liftover","text":"goal easylift perform genomic liftover given GRanges chain file.","code":""},{"path":"https://nahid18.github.io/easylift/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R package to perform genomic liftover","text":"","code":"if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"easylift\")"},{"path":"https://nahid18.github.io/easylift/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"An R package to perform genomic liftover","text":"view documentation:","code":"browseVignettes(\"easylift\")"},{"path":"https://nahid18.github.io/easylift/index.html","id":"import","dir":"","previous_headings":"","what":"Import","title":"An R package to perform genomic liftover","text":"Import libraries Call easylift GRanges object, target genome chain file.","code":"library(\"easylift\") gr <- GRanges(   seqname = Rle(     c(\"chr1\", \"chr2\"),      c(100000, 100000)   ),   ranges = IRanges(     start = 1,      end = 200000   ) ) # Here, \"hg19\" is the source genome genome(gr) <- \"hg19\" chain <- \"hg19ToHg38.over.chain.gz\"  # Here, \"hg38\" is the target genome easylift(gr, \"hg38\", chain)"},{"path":"https://nahid18.github.io/easylift/index.html","id":"biocfilecache","dir":"","previous_headings":"Import","what":"BiocFileCache","title":"An R package to perform genomic liftover","text":"use BiocFileCache chain file, add cache: , use easylift:","code":"chain_file <- \"/path/to/your/hg19ToHg38.over.chain.gz\" bfc <- BiocFileCache()  # Add chain file to cache if already not available if (nrow(bfcquery(bfc, basename(chain_file))) == 0)     bfcadd(bfc, chain_file) easylift(gr, \"hg38\")  # or gr |> easylift(\"hg38\")"},{"path":"https://nahid18.github.io/easylift/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"An R package to perform genomic liftover","text":"cite package easylift publications use: Al Nahid , Pagès H, Love M (2023). easylift: R package perform genomic liftover. R package version 1.0.0, https://github.com/nahid18/easylift. BibTeX entry LaTeX users Please note easylift made possible thanks many R bioinformatics software authors, cited either vignettes /paper(s) describing package.","code":"@Manual{,     title = {easylift: An R package to perform genomic liftover},     author = {Abdullah Al Nahid, Hervé Pagès, Michael Love},     year = {2023},     note = {R package version 1.0.0},     url = {https://github.com/nahid18/easylift},   }"},{"path":"https://nahid18.github.io/easylift/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"An R package to perform genomic liftover","text":"Please note easylift project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://nahid18.github.io/easylift/reference/easylift.html","id":null,"dir":"Reference","previous_headings":"","what":"Lift genomic coordinates from one genome assembly to another. — easylift","title":"Lift genomic coordinates from one genome assembly to another. — easylift","text":"function takes GRanges object genomic coordinates one genome assembly lifts target genome assembly using chain file.","code":""},{"path":"https://nahid18.github.io/easylift/reference/easylift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lift genomic coordinates from one genome assembly to another. — easylift","text":"","code":"easylift(x, to, chain, bfc)"},{"path":"https://nahid18.github.io/easylift/reference/easylift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lift genomic coordinates from one genome assembly to another. — easylift","text":"x GRanges object genomic coordinates original assembly. target genome assembly (e.g., \"hg38\"). chain path chain file containing liftover mapping. Can provided gzipped non-gzipped format. omitted, function look default BiocFileCache properly named chain file. bfc BiocFileCache object (optional), provided (typically) default location used.","code":""},{"path":"https://nahid18.github.io/easylift/reference/easylift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lift genomic coordinates from one genome assembly to another. — easylift","text":"GRanges object lifted genomic coordinates.","code":""},{"path":[]},{"path":"https://nahid18.github.io/easylift/reference/easylift.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lift genomic coordinates from one genome assembly to another. — easylift","text":"","code":"# Lift over the coordinates of the first 10 genes in the hg19 assembly # to the hg38 assembly library(easylift) gr <- GRanges(   seqname = Rle(c(\"chr1\", \"chr2\"), c(100000, 100000)),   ranges = IRanges(start = 1, end = 200000) ) # Here, \"hg19\" is the source genome genome(gr) <- \"hg19\"  # Here, we use the `system.file()` function because the chain file is in the # package (however if you need to point to any other file on your machine, # just do 'chain <- \"path/to/your/hg19ToHg38.over.chain.gz\"'): chain <- system.file(\"extdata\", \"hg19ToHg38.over.chain.gz\", package = \"easylift\")  # Here, \"hg38\" is the target genome easylift(gr, \"hg38\", chain) #> GRanges object with 300000 ranges and 0 metadata columns: #>            seqnames        ranges strand #>               <Rle>     <IRanges>  <Rle> #>        [1]     chr1  10001-177376      * #>        [2]    chr19 242824-242864      * #>        [3]     chr1  10001-177376      * #>        [4]    chr19 242824-242864      * #>        [5]     chr1  10001-177376      * #>        ...      ...           ...    ... #>   [299996]     chr2  10001-200000      * #>   [299997]     chr2  10001-200000      * #>   [299998]     chr2  10001-200000      * #>   [299999]     chr2  10001-200000      * #>   [300000]     chr2  10001-200000      * #>   ------- #>   seqinfo: 25 sequences (1 circular) from hg38 genome  # \\donttest{ # To use `BiocFileCache` for the chain file, add it to the cache as follows: chain_file <- \"/path/to/your/hg19ToHg38.over.chain.gz\" bfc <- BiocFileCache()  # Add chain file to cache if already not available if (nrow(bfcquery(bfc, basename(chain_file))) == 0)    bfcadd(bfc, chain_file) #> Error in bfcadd(bfc, chain_file): all(rtype == \"web\" | file.exists(fpath)) is not TRUE  # Then, use it in `easylift` like this:  easylift(gr, \"hg38\") #> Error in .get_chain_from_BiocFileCache(unique_genomes, to, bfc): Chain file not specified and filename with hg19ToHg38.over.chain pattern not found in BiocFileCache default location. # or gr |> easylift(\"hg38\") #> Error in .get_chain_from_BiocFileCache(unique_genomes, to, bfc): Chain file not specified and filename with hg19ToHg38.over.chain pattern not found in BiocFileCache default location. # }"},{"path":"https://nahid18.github.io/easylift/news/index.html","id":"easylift-100","dir":"Changelog","previous_headings":"","what":"easylift 1.0.0","title":"easylift 1.0.0","text":"Bioconductor release 3.18","code":""},{"path":"https://nahid18.github.io/easylift/news/index.html","id":"easylift-0999","dir":"Changelog","previous_headings":"","what":"easylift 0.99.9","title":"easylift 0.99.9","text":"Bug fixes improvements code.","code":""},{"path":"https://nahid18.github.io/easylift/news/index.html","id":"easylift-0991","dir":"Changelog","previous_headings":"","what":"easylift 0.99.1","title":"easylift 0.99.1","text":"Updated code documentation reflect changes suggested Bioconductor team.","code":""},{"path":"https://nahid18.github.io/easylift/news/index.html","id":"easylift-0990","dir":"Changelog","previous_headings":"","what":"easylift 0.99.0","title":"easylift 0.99.0","text":"Submitted Bioconductor","code":""}]
